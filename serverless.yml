service: zettelkasten
frameworkVersion: '3'

params:
  default:
    salt: ${file(env.yml):SALT}
    jwtSecret: ${file(env.yml):JWT_SECRET}
    docalysisToken: ${file(env.yml):DOCALYSIS_TOKEN}
    mendeleyId: ${file(env.yml):MENDELEY_ID}
    mendeleySecret: ${file(env.yml):MENDELEY_SECRET}
    mendeleyRedirect: ${file(env.yml):MENDELEY_REDIRECT}
    mendeleyState: ${file(env.yml):MENDELEY_STATE}

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-2
  stage: ${opt:stage}
  deploymentBucket:
    name: zettelkasten-lambda-code-${self:provider.stage}

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - arn:aws:dynamodb:${self:provider.region}:${aws:accountId}:table/zettelkasten-users-${opt:stage}
            - arn:aws:dynamodb:${self:provider.region}:${aws:accountId}:table/zettelkasten-users-${opt:stage}/*
            - arn:aws:dynamodb:${self:provider.region}:${aws:accountId}:table/zettelkasten-files-${opt:stage}
            - arn:aws:dynamodb:${self:provider.region}:${aws:accountId}:table/zettelkasten-files-${opt:stage}/*

        - Effect: Allow
          Action:
            - s3:*
          Resource:
            - arn:aws:s3:::zettelkasten-files-${opt:stage}
            - arn:aws:s3:::zettelkasten-files-${opt:stage}/*
            - arn:aws:s3:::zettelkasten-user-avatar-${opt:stage}
            - arn:aws:s3:::zettelkasten-user-avatar-${opt:stage}/*

  environment:
    SHOW_LOGS: true
    SALT: ${param:salt}
    JWT_SECRET: ${param:jwtSecret}
    DOCALYSIS_TOKEN: ${param:docalysisToken}
    REGION: ${self:provider.region}
    FILES_BUCKET: zettelkasten-files-${opt:stage}
    USER_AVATAR_BUCKET: zettelkasten-user-avatar-${opt:stage}
    USERS_TABLE: zettelkasten-users-${opt:stage}
    FILES_TABLE: zettelkasten-files-${opt:stage}
    MENDELEY_ID: ${param:mendeleyId}
    MENDELEY_SECRET: ${param:mendeleySecret}
    MENDELEY_REDIRECT: ${param:mendeleyRedirect}
    MENDELEY_STATE: ${param:mendeleyState}
    MENDELEY_OAUTH_URL: 'https://api.mendeley.com/oauth/authorize'

functions:
  authenticate:
    handler: src/lambda/users.authenticate
    events:
      - httpApi:
          path: /login
          method: post

  createUser:
    handler: src/lambda/users.createUser
    events:
      - httpApi:
          path: /user
          method: post

  getUser:
    handler: src/lambda/users.getUser
    events:
      - httpApi:
          path: /user/{email}
          method: get

  updateUser:
    handler: src/lambda/users.updateUser
    events:
      - httpApi:
          path: /user/{email}
          method: put

  deleteUser:
    handler: src/lambda/users.deleteUser
    events:
      - httpApi:
          path: /user/{email}
          method: delete

  activateUser:
    handler: src/lambda/users.activateUser
    events:
      - httpApi:
          path: /user/activate/{token}
          method: put

  getUnlockToken:
    handler: src/lambda/users.getUnlockToken
    events:
      - httpApi:
          path: /user/unlock/{email}
          method: get

  unlockUser:
    handler: src/lambda/users.unlockUser
    events:
      - httpApi:
          path: /user/unlock
          method: put

  createPreSignedUrl:
    handler: src/lambda/files.createPreSignedUrl
    events:
      - httpApi:
          path: /files/presignedUrl
          method: post

  handleFileUploaded:
    handler: src/lambda/files.handleFileUploaded
    events:
      - s3:
          bucket: zettelkasten-files-${opt:stage}
          event: s3:ObjectCreated:*

  scheduledFileProcess:
    handler: src/lambda/scheduledProcess.scheduledProcess
    # reservedConcurrency: 1
    timeout: 300
    events:
      - schedule: cron(0/5 * ? * * *)

  mendeleyGetAuthUrl:
    handler: src/lambda/mendeley.getAuthUrl
    events:
      - httpApi:
          path: /mendeley/oauth
          method: get

  mendeleyCallback:
    handler: src/lambda/mendeley.mendeleyCallback
    events:
      - http:
          path: /mendeley
          method: get
